@page "/Login"




<div class="nk-block nk-block-middle nk-auth-body  wide-xs">
    <div class="brand-logo pb-4 text-center">
        <a href="#" class="logo-link">
            <img class="logo-light logo-img logo-img-lg" src="/images/BOC_banner_new.png" srcset="src/images/logo2x.png 2x" alt="logo">
            <img class="logo-dark logo-img logo-img-lg" src="/images/BOC_banner_new.png" srcset="src/images/logo-dark2x.png 2x" alt="logo-dark">
        </a>
    </div>
    <div class="card">
        <div class="card-inner card-inner-lg">
            <div class="nk-block-head">
                <div class="nk-block-head-content">
                    <h4 class="nk-block-title">Sign-In</h4>
                    <div class="nk-block-des">
                        <p>Access the FScanreports using your username and passcode.</p>
                    </div>
                </div>
            </div>
            @if (!string.IsNullOrWhiteSpace(Message))
            {
                <div class="alert alert-danger mb-3">@Message</div>
            }
            <EditForm Model="loginVM" OnValidSubmit="LoginAsync">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <div class="form-label-group">
                        <label class="form-label">Username</label>
                    </div>
                    <div class="form-control-wrap">
                        <InputText @bind-Value="loginVM.Usercode" Label="Username"  class="form-control mb-3" />
                        <ValidationMessage For="@(() => loginVM.Usercode)" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-label-group">
                        <label class="form-label" >Password</label>
                        
                    </div>
                    <div class="form-control-wrap">
                        <InputText @bind-Value="loginVM.Password" Label="Password" Type="password" class="form-control mb-3" />
                        <ValidationMessage For="@(() => loginVM.Password)" />
                    </div>
                </div>
               
                <div class="form-group">
                    <button type="submit" class="btn btn-lg btn-primary btn-block">Sign in</button>
                </div>
            </EditForm>

         
        </div>
    </div>
</div>

@code {

    string? Message = string.Empty;

    public LoginVM loginVM = new();

    public async Task LoginAsync()
    {
        var response = await AuthenticationService.LoginAsync(loginVM);
        if (response.Success)
        {
           Message = response.Message;
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(response.Token);
            Navigation.NavigateTo("/", forceLoad: true);
        }
        else
        {
            Message = response.Message;
        }
    }
}
