@page "/ChangePassword"

<div class="nk-block-head nk-block-head-sm">
    <div class="nk-block-between">
    </div>
</div>
<div class="nk-block">
    <div class="row g-gs">
        <div class="col-lg-6 offset-3">
            <div class="card card-bordered card-full">
                <div class="card-inner">
                    <div class="card-head">
                        <h5 class="card-title">Change password info</h5>
                    </div>


                    @if (!string.IsNullOrWhiteSpace(Message))
                    {
                        <div class="alert alert-danger mb-3">@Message</div>
                    }
                    <EditForm Model="@model" OnValidSubmit="ChangePasswordAsync">
                        <DataAnnotationsValidator />

                        <div class="row g-4">
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label class="form-label">Old Password</label>
                                    <InputText type="password" @bind-Value="model.OldPassword" class="form-control" />
                                    <ValidationMessage For="@(() => model.OldPassword)" />
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label class="form-label">New Password</label>
                                    <InputText type="password" @bind-Value="model.NewPassword" class="form-control" />
                                    <ValidationMessage For="@(() => model.NewPassword)" />
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <label class="form-label">Confirm Password</label>
                                    <InputText type="password" @bind-Value="model.ConfirmPassword" class="form-control" />
                                    <ValidationMessage For="@(() => model.ConfirmPassword)" />
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group">
                                    <button type="submit" class=" btn btn-primary">Submit</button>
                                      <button type="button" class="btn btn-outline-secondary" @onclick="Cancel">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </EditForm>
                </div>

            </div><!-- .card -->
        </div><!-- .col -->

    </div><!-- .row -->
</div><!-- .nk-block -->
@code {
    private ChangePasswordVM model = new();
    string? Message = string.Empty;

    public async Task ChangePasswordAsync()
    {
        
        var response = await UserService.ChangePasswordAsync(model);
        if (response.Flag)
        {
            toastService.ShowSuccess(response.Message);
            await Task.Delay(3000);
            Navigation.NavigateTo("/logout");
        }
        else
        {
            toastService.ShowError(response.Message);
            Message = response.Message;
        }
    }

    public void Cancel()
    {
        Navigation.NavigateTo("/");    
    }
}
