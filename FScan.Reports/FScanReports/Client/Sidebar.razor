@using System.IdentityModel.Tokens.Jwt
@using Blazored.LocalStorage
@using FScanReports.Client.States
@using System.Net.Http.Headers
@using System.Security.Claims
@inject ILocalStorageService localStorageService
@inject HttpClient Http
@inherits LayoutComponentBase

<div class="nk-sidebar nk-sidebar-fixed is-light" style="display: @(isSidebarOpen ? "block" : "none");">
    <div class="nk-sidebar-element nk-sidebar-head" style="padding: 14px;10px">
        <div class="nk-sidebar-brand">
            <a href="/" class="logo-link nk-sidebar-logo">
                <img class="logo-dark logo-img" src="/images/BOC_banner_new.png" srcset="images/boc_logo_affiliate.jpg 2x" alt="logo-dark" />
            </a>
        </div>
     
    </div>
    <div class="nk-sidebar-element nk-sidebar-body">
        <div class="nk-sidebar-content">
            <div class="nk-sidebar-menu" data-simplebar>
                <ul class="nk-menu">

                    <li class="nk-menu-heading">
                        <h6 class="overline-title text-primary-alt">Reports</h6>
                    </li>


                    <li class="nk-menu-item @(activeMenu == "AttendanceReports" ? "active current-page" : "")">
                        <a href="AttendanceReport" class="nk-menu-link" @onclick='() => SetActiveMenu("AttendanceReports")'>
                            <span class="nk-menu-icon"><em class="icon ni ni-reports-alt"></em></span>
                            <span class="nk-menu-text">Attendance Reports</span>
                        </a>
                    </li>
                    @if (Role == "User")
                    {
                        <li class="nk-menu-item @(activeMenu == "FScanLogsDetails" ? "active current-page" : "")">
                            <a href="FScanLogsDetails/@CurrentUserID" class="nk-menu-link" @onclick='() => SetActiveMenu("FScanLogsDetails")'>
                                <span class="nk-menu-icon"><em class="icon ni ni-scan-fill"></em></span>
                                <span class="nk-menu-text">FingerScan Logs</span>

                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="nk-menu-item @(activeMenu == "FingerScanLogs" ? "active current-page" : "")">
                            <a href="FingerPrintScanLogs" class="nk-menu-link" @onclick='() => SetActiveMenu("FingerScanLogs")'>
                                <span class="nk-menu-icon"><em class="icon ni ni-scan-fill"></em></span>
                                <span class="nk-menu-text">FingerScan Logs (Admin)</span>

                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>


</div>


@code {

    private bool isSidebarOpen = true;
    private bool ReportsMaintenanceMenuDisplay = false;
    private string? activeMenu;
    private string? CurrentUserID;
    private string? Role;


    protected override async Task OnInitializedAsync()
    {
        var token = await localStorageService.GetItemAsStringAsync("auth");

        if (!string.IsNullOrEmpty(token))
        {
            var handler = new JwtSecurityTokenHandler();
            var jwtToken = handler.ReadJwtToken(token);

            CurrentUserID = jwtToken.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value ?? string.Empty;
            Role = jwtToken.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value ?? string.Empty;
            Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
        }
    }
 

    private void ToggleSidebar()
    {
        isSidebarOpen = !isSidebarOpen;
    }


    private void ToggleBankReportsMaintenanceMenu()
    {
        ReportsMaintenanceMenuDisplay = !ReportsMaintenanceMenuDisplay;
    }

    private void SetActiveMenu(string menuName)
    {
        activeMenu = menuName;
    }


}